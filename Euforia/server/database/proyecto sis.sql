/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 16.1 		*/
/*  Created On : 09-oct.-2023 5:31:45 p. m. 				*/
/*  DBMS       : MySql 						*/
/* ---------------------------------------------------- */
SET FOREIGN_KEY_CHECKS = 0;

/* Drop Tables */
DROP TABLE IF EXISTS Auditorio CASCADE;
DROP TABLE IF EXISTS Aula CASCADE;
DROP TABLE IF EXISTS Patio CASCADE;
DROP TABLE IF EXISTS Prestamo CASCADE;
DROP TABLE IF EXISTS Recurso CASCADE;
DROP TABLE IF EXISTS Reserva CASCADE;
DROP TABLE IF EXISTS unidad CASCADE;
DROP TABLE IF EXISTS Usuario CASCADE;




/* Auditorio */
CREATE TABLE Auditorio (
	pk_fk_num_unidad INT NOT NULL COMMENT 'Numero de la unidad a la que pertenece el recurso',
	pk_fk_id_recurso INT NOT NULL COMMENT 'Identificacion del recurso',
	e_aforo SMALLINT NOT NULL COMMENT 'Cantidad de personas que pueden ocupar el auditorio',
	CONSTRAINT PK_Auditorio PRIMARY KEY (pk_fk_id_recurso ASC, pk_fk_num_unidad ASC)
) COMMENT = 'TIpo de recurso auditorio';

ALTER TABLE
	Auditorio
ADD
	INDEX IXFK_Auditorio_Recurso (pk_fk_id_recurso ASC, pk_fk_num_unidad ASC);

ALTER TABLE
	Auditorio
ADD
	CONSTRAINT FK_Auditorio_Recurso FOREIGN KEY (pk_fk_id_recurso, pk_fk_num_unidad) REFERENCES Recurso (pk_id, fk_numero_unidad) ON DELETE Restrict ON UPDATE Restrict;




/* Aula */
CREATE TABLE Aula (
	pk_fk_num_unidad INT NOT NULL COMMENT 'Numero de la unidad a la que pertenece el recurso',
	pk_fk_id_recurso INT NOT NULL COMMENT 'Identificacion del recurso ',
	e_cantidad_puestos SMALLINT NOT NULL COMMENT 'Cantidad de puestos/aforo del aula',
	n_material_puestos VARCHAR(25) NOT NULL COMMENT 'Nombre del material de cual están hechos los puestos: madera, plastico, etc',
	CONSTRAINT PK_Aula PRIMARY KEY (pk_fk_id_recurso ASC, pk_fk_num_unidad ASC)
) COMMENT = 'Tipo de recurso aula, lugar en el que se da a clase';

ALTER TABLE
	Aula
ADD
	INDEX IXFK_Aula_Recurso (pk_fk_id_recurso ASC, pk_fk_num_unidad ASC);

ALTER TABLE
	Aula
ADD
	CONSTRAINT FK_Aula_Recurso FOREIGN KEY (pk_fk_id_recurso, pk_fk_num_unidad) REFERENCES Recurso (pk_id, fk_numero_unidad) ON DELETE Restrict ON UPDATE Restrict;




/* Patio */
CREATE TABLE Patio (
	pk_fk_num_unidad INT NOT NULL COMMENT 'Numero de la unidad a la que pertenece el recurso',
	pk_fk_id_recursos INT NOT NULL COMMENT 'Identificacion del recurso',
	i_tipo_patio VARCHAR(25) NOT NULL COMMENT 'Define la especializacion del patio, por ejemplo el deporte para el cual ',
	CONSTRAINT PK_Patio PRIMARY KEY (pk_fk_id_recursos ASC, pk_fk_num_unidad ASC)
) COMMENT = 'Tipo de recurso patio, en el que se hace deporte';

ALTER TABLE
	Patio
ADD
	INDEX IXFK_Patio_Recurso (pk_fk_id_recursos ASC, pk_fk_num_unidad ASC);

ALTER TABLE
	Patio
ADD
	CONSTRAINT FK_Patio_Recurso FOREIGN KEY (pk_fk_id_recursos, pk_fk_num_unidad) REFERENCES Recurso (pk_id, fk_numero_unidad) ON DELETE Restrict ON UPDATE Restrict;




/* Prestamo */
CREATE TABLE Prestamo (
	f_fecha_inicio DATETIME NOT NULL,
	f_fecha_entrega DATETIME(4) NOT NULL,
	fk_id_reserva INT NOT NULL,
	fk_id_admin_entrega INT NOT NULL,
	fk_id_admin_devolucion INT NULL,
	CONSTRAINT PK_Prestamo PRIMARY KEY (fk_id_reserva ASC)
) COMMENT = 'Registro del prestamo de un recurso fisico. En el que se entrega el recurso fisico a un usuario';

ALTER TABLE
	Prestamo
ADD
	INDEX IXFK_Prestamo_Reserva (fk_id_reserva ASC);

ALTER TABLE
	Prestamo
ADD
	INDEX IXFK_Prestamo_Usuario (fk_id_admin_entrega ASC);

ALTER TABLE
	Prestamo
ADD
	INDEX IXFK_Prestamo_Usuario_02 (fk_id_admin_devolucion ASC);

ALTER TABLE
	Prestamo
ADD
	CONSTRAINT FK_Prestamo_Reserva FOREIGN KEY (fk_id_reserva) REFERENCES Reserva (pk_id) ON DELETE Restrict ON UPDATE Restrict;

ALTER TABLE
	Prestamo
ADD
	CONSTRAINT FK_Prestamo_Usuario FOREIGN KEY (fk_id_admin_entrega) REFERENCES Usuario (pk_id) ON DELETE Restrict ON UPDATE Restrict;

ALTER TABLE
	Prestamo
ADD
	CONSTRAINT FK_Prestamo_Usuario_02 FOREIGN KEY (fk_id_admin_devolucion) REFERENCES Usuario (pk_id) ON DELETE Restrict ON UPDATE Restrict;




/* Recurso */
CREATE TABLE Recurso (
	pk_id INT NOT NULL COMMENT 'identificador del recurso fisico',
	n_nombre VARCHAR(50) NOT NULL COMMENT 'Nombre del recurso fisico',
	n_descripcion VARCHAR(50) NOT NULL COMMENT 'Informacion que da informacion del recurso fisico',
	i_tipo_recurso VARCHAR(25) NOT NULL,
	fk_numero_unidad INT NOT NULL,
	CONSTRAINT PK_Table_Two PRIMARY KEY (pk_id ASC, fk_numero_unidad ASC)
) COMMENT = 'Recurso fisico perteneciente a una unidad';

ALTER TABLE
	Recurso
ADD
	INDEX IXFK_Recurso_Unidad (fk_numero_unidad ASC);

ALTER TABLE
	Recurso
ADD
	CONSTRAINT FK_Recurso_Unidad FOREIGN KEY (fk_numero_unidad) REFERENCES unidad (pk_numero_unidad) ON DELETE Restrict ON UPDATE Restrict;




/* Reserva */
CREATE TABLE Reserva (
	pk_id INT NOT NULL COMMENT 'Identificación de la reserva',
	f_fecha_de_reserva DATE NOT NULL COMMENT 'Fecha en la que se realizó la reserva',
	f_fecha_inicio_reserva DATETIME NOT NULL COMMENT 'Fecha y hora en la que inicia la reserva del recurso fisico',
	f_fecha_fin_reserva DATETIME NOT NULL COMMENT 'Fecha y hora en la que termina la reserva del recurso fisico',
	fk_id INT NULL,
	fk_numero_unidad INT NULL,
	fk_id_recurso INT NULL,
	pk_id_usuario INT NULL,
	CONSTRAINT PK_Reserva PRIMARY KEY (pk_id ASC)
) COMMENT = 'Datos del proceso en el que se anticipa el uso de un recurso fisico';

ALTER TABLE
	Reserva
ADD
	INDEX IXFK_Reserva_Recurso (fk_id_recurso ASC, fk_numero_unidad ASC);

ALTER TABLE
	Reserva
ADD
	INDEX IXFK_Reserva_Usuario (pk_id_usuario ASC);

ALTER TABLE
	Reserva
ADD
	CONSTRAINT FK_Reserva_Recurso FOREIGN KEY (fk_id_recurso, fk_numero_unidad) REFERENCES Recurso (pk_id, fk_numero_unidad) ON DELETE Restrict ON UPDATE Restrict;

ALTER TABLE
	Reserva
ADD
	CONSTRAINT FK_Reserva_Usuario FOREIGN KEY (pk_id_usuario) REFERENCES Usuario (pk_id) ON DELETE Restrict ON UPDATE Restrict;




CREATE TABLE unidad (
	pk_numero_unidad INT NOT NULL COMMENT 'Número que identifica una unidad',
	n_nombre VARCHAR(25) NOT NULL COMMENT 'Nombre de la unidad',
	CONSTRAINT PK_Table_One PRIMARY KEY (pk_numero_unidad ASC)
) COMMENT = 'Centro en el que se prestan recusos fisicos';





CREATE TABLE Usuario (
	pk_id INT NOT NULL,
	n_nombre VARCHAR(50) NOT NULL,
	n_contrasena VARCHAR(25) NOT NULL,
	CONSTRAINT PK_Usuario PRIMARY KEY (pk_id ASC)
) COMMENT = 'Datos del usuario que interactua con el sistema, puede ser usuario de la aplicación o (exclusivo) administrador';





SET FOREIGN_KEY_CHECKS = 1;